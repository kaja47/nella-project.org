Coding standard
===============

Základem je PSR-2 s pár omezeními a rozšířeními.

PSR-2 exclude
--------------

1) Odsazujeme pomocí tabů nikoli 4 mezer.
2) Pro use třídy nebo namespace používáme pouze jedno use. Jednotlivé třídy nebo namespace oddělujeme čárkou. Druhý a další use je odsazen o jednu úroveň.
3) `TRUE`, `FALSE` a `NULL` jsou vždy velkými písmeny
4) Víceřádkové parametry funkcí / volání funkcí formátujeme tak aby byly snadno čitelné

Namespace a use
---------------

1) Výjimky vyhazujeme jako full class
2) Pro třídy, které nelze zapsat relativní cestou (namespace) používáme use.
3) V případě že je třída uvedena v use se do anotací přesto uvádí full class
4) Nikdy nepoužíváme use na rootovskou namespace (`use Nette`).

Pole a stringy
---------------

1) Pokud to není nutné jsou stringy uvozovány do apostrofů místo uvozovek.
2) Pole se nikdy neodsazují zarovnaně.

Třídy a interface
------------------

1) První se definují konstanty.
2) Druhé jsou vlastnosti.
3) Konstruktor
4) Metody
5) *Getter* předchází *setter*.
6) Pokud třída obsahuje veřejný *getter* / *setter* musí obsahovat i `@property` anotaci
7) Mezi jednotlivými vlastnostmi a konstantami se nedělají mezery (nové řádky)
8) Mezi vlastnostmi, konstantami a jednotlivými metodami je vždy jedna mezera (nový řádek)
9) Mezi koncem a začátkem těla třídy není mezera (nový řádek) - tělo začíná na novém řádku za `{` a končí před `}` které je na novém řádku
10) Interface vždy začíná písmenkem *I*

phpDoc
------

1) Pokud phpDoc vlastnosti obsahuje pouze `@var` zapisuje se na jeden řádek `/** @var string */`.
2) U anotace `@param` nepíšeme název parametru.
3) Anotace začíná vždy malým písmenem.
4) Pokud v anotaci uvádíme typ a typem je třída nebo interface, který máme uveden v use uvádíme do anotace full class.

Ostatní
-------

1) If / else / elseif mají vždy `{}`